{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","None","sortType","setSortType","isReversed","setIsReversed","goodsList","goods","goodsToReturn","Length","sort","a","b","length","Name","localeCompare","reverse","getGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,gBAAAA,E,aAAAA,M,KA8BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA3BR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAE1B,OAAQL,GACN,KAAKL,EAASY,OACZD,EAAcE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAC1C,MACF,KAAKhB,EAASiB,KACZN,EAAcE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,cAAcH,MASjD,OAJIR,GACFI,EAAcQ,UAGTR,EAMWS,CAASnB,EAAiBI,EAAUE,GAEtD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,SACD,UACA,CAAE,WAAYlB,IAAaL,EAASiB,OAExCO,QAAS,kBAAMlB,EAAYN,EAASiB,OAPtC,iCAYA,wBACEK,KAAK,SACLD,UACEE,IAAG,SACD,aACA,CAAE,WAAYlB,IAAaL,EAASY,SAExCY,QAAS,kBAAMlB,EAAYN,EAASY,SAPtC,4BAYA,wBACEU,KAAK,SACLD,UACEE,IAAG,SACD,aACA,CAAE,YAAahB,IAEnBiB,QAAS,kBAAMhB,GAAeD,IAPhC,sBAYEF,IAAaL,EAASI,MAAQG,IAE5B,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAYN,EAASI,MACrBI,GAAc,IALlB,sBAaN,6BACGC,EAAUgB,KAAI,SAAAC,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC1GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9e411c33.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Name = 'name',\n  Length = 'length',\n  None = 'none',\n}\n\nfunction getGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n): string[] {\n  const goodsToReturn = [...goods];\n\n  switch (sortType) {\n    case SortType.Length:\n      goodsToReturn.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.Name:\n      goodsToReturn.sort((a, b) => a.localeCompare(b));\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    goodsToReturn.reverse();\n  }\n\n  return goodsToReturn;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.None);\n  const [isReversed, setIsReversed] = useState(false);\n  const goodsList = getGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button',\n              'is-info',\n              { 'is-light': sortType !== SortType.Name })\n          }\n          onClick={() => setSortType(SortType.Name)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button',\n              'is-success',\n              { 'is-light': sortType !== SortType.Length })\n          }\n          onClick={() => setSortType(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button',\n              'is-warning',\n              { 'is-light': !isReversed })\n          }\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.None || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortType(SortType.None);\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {goodsList.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}